# =====================================================
# AGENTSALUD MVP - SIMPLIFIED DOCKERFILE FOR COOLIFY
# =====================================================
# Emergency fallback Dockerfile without startup scripts
# Use this if the main Dockerfile continues to fail
#
# @author AgentSalud DevOps Team
# @date January 2025

# STAGE 1: Dependencies
# =====================================================
FROM node:18-alpine AS deps

WORKDIR /app

# Copy package files
COPY package.json package-lock.json* ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# STAGE 2: Builder
# =====================================================
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files and install all dependencies
COPY package.json package-lock.json* ./
RUN npm ci

# Copy source code
COPY . .

# Set build-time environment variables (placeholders)
ENV NEXT_PUBLIC_SUPABASE_URL=https://placeholder.supabase.co
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=placeholder-anon-key
ENV NEXTAUTH_SECRET=build-time-secret-placeholder-32-characters-long

# Build the application
RUN npm run build

# STAGE 3: Runner
# =====================================================
FROM node:18-alpine AS runner

# Install curl for health checks
RUN apk add --no-cache curl && apk upgrade

WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Set production environment
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Copy built application
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/package.json ./package.json

# Create uploads directory
RUN mkdir -p /app/uploads && chown -R nextjs:nodejs /app/uploads

# Set permissions
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=5 \
  CMD curl -f http://localhost:3000/api/health/basic || curl -f http://localhost:3000/api/health || exit 1

# Start the application directly
CMD ["node", "server.js"]
